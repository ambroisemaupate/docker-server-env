services:
  plausible_db:
    # Plausible v2.1.1 was tested against PostgreSQL versions 15 and 16
    # https://github.com/plausible/analytics/blob/v2.1.1/.github/workflows/elixir.yml#L21-L32
    image: postgres:16-alpine
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  plausible_events_db:
    image: clickhouse/clickhouse-server:24.3.3.102-alpine
    restart: always
    volumes:
      - event-data:/var/lib/clickhouse
      - event-logs:/var/log/clickhouse-server
      - ./clickhouse/clickhouse-config.xml:/etc/clickhouse-server/config.d/logging.xml:ro
      - ./clickhouse/clickhouse-user-config.xml:/etc/clickhouse-server/users.d/logging.xml:ro
    networks:
      - default
    ulimits:
      nofile:
        soft: 262144
        hard: 262144

  plausible:
    image: plausible/community-edition:v2
    restart: always
    command: sh -c "sleep 10 && /entrypoint.sh db createdb && /entrypoint.sh db migrate && /entrypoint.sh run"
    depends_on:
      - plausible_db
      - plausible_events_db
    networks:
      - default
      - frontproxynet
    env_file:
      - plausible-conf.env
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.${APP_NAMESPACE}.loadbalancer.server.scheme=http"
      - "traefik.http.services.${APP_NAMESPACE}.loadbalancer.server.port=${APP_PORT}"
      - "traefik.http.services.${APP_NAMESPACE}.loadbalancer.passhostheader=true"
      # Router
      - "traefik.http.routers.${APP_NAMESPACE}.tls=true"
      - "traefik.http.routers.${APP_NAMESPACE}.tls.certresolver=letsencrypt"
      - "traefik.http.routers.${APP_NAMESPACE}.rule=Host(${HOSTNAME})"
      - "traefik.http.routers.${APP_NAMESPACE}.service=${APP_NAMESPACE}"
      # Apply middlewares
      - "traefik.http.routers.${APP_NAMESPACE}.middlewares=${APP_NAMESPACE}Sts,${APP_NAMESPACE}Redirectscheme"
      # Add SSL redirection
      - "traefik.http.middlewares.${APP_NAMESPACE}Redirectscheme.redirectscheme.scheme=https"
      - "traefik.http.middlewares.${APP_NAMESPACE}Redirectscheme.redirectscheme.permanent=true"
      # HSTS headers
      - "traefik.http.middlewares.${APP_NAMESPACE}Sts.headers.stsincludesubdomains=false"
      - "traefik.http.middlewares.${APP_NAMESPACE}Sts.headers.stspreload=true"
      - "traefik.http.middlewares.${APP_NAMESPACE}Sts.headers.stsseconds=31536000"
      - "traefik.http.middlewares.${APP_NAMESPACE}Sts.headers.isdevelopment=false"

  backup:
    image: ambroisemaupate/s3-backup
    networks:
      - default
    environment:
      LOCAL_PATH: /var/www/html
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
      S3_SIGNATURE: ${S3_SIGNATURE}
      S3_BUCKET_LOCATION: ${S3_BUCKET_LOCATION}
      S3_HOST_BASE: ${S3_HOST_BASE}
      S3_HOST_BUCKET: ${S3_HOST_BUCKET}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      S3_FOLDER_NAME: ${S3_FOLDER_NAME}
      S3_STORAGE_CLASS: ${S3_STORAGE_CLASS}
      # Backup PGSQL
      PGDATABASE: plausible_dev
      PGHOST: plausible_db
      PGPASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      # For the moment we need to backup db as files
      - event-data:/var/www/html/clickhouse:ro
      - event-logs:/var/www/html/clickhouse-server:ro

# For localhost testing
#  mailer:
#    image: mailhog/mailhog
#    networks:
#      - frontproxynet
#      - default
#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.services.${APP_NAMESPACE}_mailer.loadbalancer.server.scheme=http"
#      - "traefik.http.services.${APP_NAMESPACE}_mailer.loadbalancer.server.port=8025"
#      - "traefik.http.services.${APP_NAMESPACE}_mailer.loadbalancer.passhostheader=true"
#      # Listen HTTP
#      - "traefik.http.routers.${APP_NAMESPACE}_mailer.entrypoints=http"
#      - "traefik.http.routers.${APP_NAMESPACE}_mailer.rule=Host(${HOSTNAME_MAILER})"
#      - "traefik.http.routers.${APP_NAMESPACE}_mailer.service=${APP_NAMESPACE}_mailer"

volumes:
  db-data:
    driver: local
  event-data:
    driver: local
  event-logs:
    driver: local
  geoip:
    driver: local

networks:
  frontproxynet:
    external: true
