[log]
  level = "ERROR"

# https://doc.traefik.io/traefik/operations/ping/
[ping]

# https://doc.traefik.io/traefik/observability/metrics/prometheus/#entrypoint
[metrics]
  [metrics.prometheus]
    addServicesLabels = true
    addEntryPointsLabels = true
    addRoutersLabels = true
    entryPoint = "metrics"

# Limiting the Logs to Specific Fields
[accessLog]
  filePath = "/access.log"

  [accessLog.filters]
    statusCodes = ["400-403", "300-302", "500-503"]
    minDuration = "700ms"

[global]
  checkNewVersion = false
  sendAnonymousUsage = false

[entryPoints]
  [entryPoints.metrics]
    address = ":8899"

  [entryPoints.http]
    address = ":80"
    [entryPoints.http.forwardedHeaders]
      insecure = true
      # Add here any addtional reverse-proxy IPs (such as Cloudlflare)
      trustedIPs = ["127.0.0.1", "192.168.0.1"]

  [entryPoints.https]
    address = ":443"
    [entryPoints.https.http3]
    [entryPoints.https.forwardedHeaders]
      insecure = true
      # Add here any addtional reverse-proxy IPs (such as Cloudlflare)
      trustedIPs = ["127.0.0.1", "192.168.0.1"]

[api]

[providers.docker]
  endpoint = "unix:///var/run/docker.sock"
  watch = true
  exposedByDefault = false
  network = "frontproxynet"

[certificatesResolvers.letsencrypt.acme]
  email = "xxxx@xxxx.com"
  storage = "acme.json"
  # Use staging server during tests
  #caServer = "https://acme-staging-v02.api.letsencrypt.org/directory"

  [certificatesResolvers.letsencrypt.acme.httpChallenge]
    # used during the challenge
    entryPoint = "http"
