version: '3.6'

services:
  traefik:
    image: traefik:2.10
    restart: always
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    networks:
      - default
      - frontproxynet
    privileged: yes
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.toml:/traefik.toml
      - ./acme.json:/acme.json
      - ./access.log:/access.log
    container_name: traefik
    labels:
      - "traefik.enable=true"
      - "com.centurylinklabs.watchtower.enable=true"

      # Listen HTTP
      - "traefik.http.routers.api.rule=Host(${MONITORING_HOST})"
      - "traefik.http.routers.api.service=api@internal"

      # Listen HTTPS
      - "traefik.http.routers.api-secure.entrypoints=https"
      - "traefik.http.routers.api-secure.tls=true"
      - "traefik.http.routers.api-secure.tls.certresolver=letsencrypt"
      - "traefik.http.routers.api-secure.rule=Host(${MONITORING_HOST})"
      - "traefik.http.routers.api-secure.service=api@internal"

      # Apply middlewares
      - "traefik.http.routers.api.middlewares=apiAuth,apiRedirectscheme"
      - "traefik.http.routers.api-secure.middlewares=apiAuth"

      # Use Basic auth
      - "traefik.http.middlewares.apiAuth.basicauth.users=${MONITORING_AUTH_BASIC}"

      # Use IP Whitelisting
      # BECAREFUL, if you are using IPv6, Traefik wont see X-Real-IP
      - "traefik.http.middlewares.apiIpWhitelist.ipwhitelist.sourcerange=${IP_RANGE}"
      # Only use depth if X-Forwarded_For is present (Cloudflare)
      #- "traefik.http.middlewares.apiIpWhitelist.ipwhitelist.ipstrategy.depth=1"

      # Add SSL redirection
      - "traefik.http.middlewares.apiRedirectscheme.redirectscheme.scheme=https"
      - "traefik.http.middlewares.apiRedirectscheme.redirectscheme.permanent=true"

      # Add Gzip globally
      - "traefik.http.middlewares.defaultCompress.compress=true"
      - "traefik.http.middlewares.defaultCompress.compress.excludedcontenttypes=${EXCLUDED_COMPRESS_TYPES}"

  # Watch acme.json and dump certificates to files
  #traefik-certs-dumper:
  #  image: ldez/traefik-certs-dumper:v2.7.4
  #  container_name: traefik_certdumper
  #  networks:
  #    - default
  #  depends_on:
  #    - traefik
  #  restart: unless-stopped
  #  entrypoint: sh -c '
  #    apk add jq
  #    ; while ! [ -e /data/acme.json ]
  #    || ! [ `jq ".[] | .Certificates | length" /data/acme.json` != 0 ]; do
  #    sleep 1
  #    ; done
  #    && traefik-certs-dumper file --version v2 --watch
  #    --source /data/acme.json --dest /data/certs'
  #  volumes:
  #    - ./:/data

networks:
  frontproxynet:
    external: true
